using BMW.Rheingold.Psdz.Model.Sfa;
using System.Collections.Generic;

namespace BMW.Rheingold.Psdz
{
    internal class TokenOverallStatusEtoMapper : MapperBase<PsdzTokenOverallStatusEtoEnum, TokenOverallStatusEtoModel>
    {
        protected override IDictionary<PsdzTokenOverallStatusEtoEnum, TokenOverallStatusEtoModel> CreateMap()
        {
            return new Dictionary<PsdzTokenOverallStatusEtoEnum, TokenOverallStatusEtoModel>
        {
            {
                PsdzTokenOverallStatusEtoEnum.AUTH_FAILED,
                TokenOverallStatusEtoModel.AUTH_FAILED
            },
            {
                PsdzTokenOverallStatusEtoEnum.CONFLICT,
                TokenOverallStatusEtoModel.CONFLICT
            },
            {
                PsdzTokenOverallStatusEtoEnum.DETAILED,
                TokenOverallStatusEtoModel.DETAILED
            },
            {
                PsdzTokenOverallStatusEtoEnum.DNS_NOT_AVAILABLE,
                TokenOverallStatusEtoModel.DNS_NOT_AVAILABLE
            },
            {
                PsdzTokenOverallStatusEtoEnum.EMPTY,
                TokenOverallStatusEtoModel.EMPTY
            },
            {
                PsdzTokenOverallStatusEtoEnum.ERROR,
                TokenOverallStatusEtoModel.ERROR
            },
            {
                PsdzTokenOverallStatusEtoEnum.HOSTNAME_NOT_CORRECT,
                TokenOverallStatusEtoModel.HOSTNAME_NOT_CORRECT
            },
            {
                PsdzTokenOverallStatusEtoEnum.INVALID_HOSTNAME,
                TokenOverallStatusEtoModel.INVALID_HOSTNAME
            },
            {
                PsdzTokenOverallStatusEtoEnum.MALFORMED,
                TokenOverallStatusEtoModel.MALFORMED
            },
            {
                PsdzTokenOverallStatusEtoEnum.NOT_IN_WHITELIST,
                TokenOverallStatusEtoModel.NOT_IN_WHITELIST
            },
            {
                PsdzTokenOverallStatusEtoEnum.OK,
                TokenOverallStatusEtoModel.OK
            },
            {
                PsdzTokenOverallStatusEtoEnum.OTHER_ERROR,
                TokenOverallStatusEtoModel.OTHER_ERROR
            },
            {
                PsdzTokenOverallStatusEtoEnum.UNKNOWN_HOSTNAME,
                TokenOverallStatusEtoModel.UNKNOWN_HOSTNAME
            },
            {
                PsdzTokenOverallStatusEtoEnum.UNKNOWN_VERSION,
                TokenOverallStatusEtoModel.UNKNOWN_VERSION
            },
            {
                PsdzTokenOverallStatusEtoEnum.VIN_MALFORMED,
                TokenOverallStatusEtoModel.VIN_MALFORMED
            },
            {
                PsdzTokenOverallStatusEtoEnum.WRONG_FORMAT,
                TokenOverallStatusEtoModel.WRONG_FORMAT
            },
            {
                PsdzTokenOverallStatusEtoEnum.NULL,
                TokenOverallStatusEtoModel.NULL
            },
            {
                PsdzTokenOverallStatusEtoEnum.TOKENPACKAGE_REBUILD_ERROR,
                TokenOverallStatusEtoModel.TOKENPACKAGE_REBUILD_ERROR
            },
            {
                PsdzTokenOverallStatusEtoEnum.FEATURE_SET_REBUILD_ERROR,
                TokenOverallStatusEtoModel.FEATURE_SET_REBUILD_ERROR
            },
            {
                PsdzTokenOverallStatusEtoEnum.NO_RIGHTS_ASSIGNED,
                TokenOverallStatusEtoModel.NO_RIGHTS_ASSIGNED
            },
            {
                PsdzTokenOverallStatusEtoEnum.LINK_TO_ID_UNKNOWN,
                TokenOverallStatusEtoModel.LINK_TO_ID_UNKNOWN
            },
            {
                PsdzTokenOverallStatusEtoEnum.UNDEFINED,
                TokenOverallStatusEtoModel.UNDEFINED
            }
        };
        }
    }
}